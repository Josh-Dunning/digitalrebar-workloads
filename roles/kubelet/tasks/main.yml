--- 
- debug: msg="Playbook source {{ playbook_source }} "
<<<<<<< Updated upstream

# debugging variables
- include: debug.yml
  when: debug

- name: Create cni directory
  file:
    path: /opt/cni
    state: directory

- name: Get CNI tarball
  get_url:
    dest: "/tmp/cni-c864f0e1ea73719b8f4582402b0847064f9883b0.tar.gz"
    url: "https://storage.googleapis.com/kubernetes-release/network-plugins/cni-c864f0e1ea73719b8f4582402b0847064f9883b0.tar.gz"
    validate_certs: yes

- name: Explode tarball
  shell: "tar -xvf /tmp/cni-c864f0e1ea73719b8f4582402b0847064f9883b0.tar.gz -C /opt/cni"

- name: "Download Kubernetes Executables [SLOW]"
  get_url:
    dest: "{{bin_dir}}/kubelet"
    checksum: "{{ item }}"
    url: "{{ source.url }}/kubelet"
    validate_certs: yes
    mode: 0755
  with_items: "{{ vars['source']['checksum'][k8s.version]['kubelet'] }}"
  when: source.checksum["{{k8s.version}}"] is defined and k8s.strict|default(true)

- name: install | Write kubeconfig
  template:
    src: "kubeconfig.j2"
    dest: "/var/lib/kubelet/kubeconfig"
  notify: restart kubelet
=======
# SHA references
- include_vars: group_vars/sources.yml
# debugging variables
- include: prereqs/debug.yml
  when: debug
# main script

- include: ../shared/tasks/downloader.yml kube_component=kubelet
>>>>>>> Stashed changes

- name: install | Write kubelet systemd init file
  template: src=kubelet/templates/kubelet.service.j2 dest=/etc/systemd/system/kubelet.service backup=yes
  when: ansible_service_mgr == "systemd"
<<<<<<< Updated upstream
  notify:
    - reload kubelet systemd
    - restart kubelet
=======
  notify: restart kubelet

- name: Write kubelet config file
  template: src=kubelet/templates/kubelet.j2 dest={{ k8s.config_dir }}/kubelet.env backup=yes
  notify: restart kubelet

- name: write the kubecfg (auth) file for kubelet
  template: src=kubelet/templates/node-kubeconfig.yaml.j2 dest={{ k8s.config_dir }}/node-kubeconfig.yaml backup=yes
  notify: restart kubelet

- name: Write proxy manifest
  template:
    src: kubelet/templates/manifests/kube-proxy.manifest.j2
    dest: "{{ k8s.manifest_dir }}/kube-proxy.manifest"

- name: Restart kubelet if binary changed
  command: /bin/true
  notify: restart kubelet
  when: kubelet_copy.stdout_lines
>>>>>>> Stashed changes

# reload-systemd
- meta: flush_handlers

- name: Enable kubelet
  service:
    name: kubelet
    enabled: yes
<<<<<<< Updated upstream
=======
    state: started
>>>>>>> Stashed changes

