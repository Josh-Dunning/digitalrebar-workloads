--- 
# APL v2 Licensed.  Copyright RackN 2016
# Original scripts based on code from https://github.com/kubespray/kargo

- name: "Download Executable"
  dest: kubernetes/bin/kube-apiserver
  version: "{{ k8s.version }}"
  sha256: "{{vars['sources'][k8s.version]['apiserver']}}"
  source_url: "{{ sources.download_url }}/kube-apiserver"
  url: "{{ sources.download_url }}/kube-apiserver"
  owner: "{{ k8s.account }}"
  mode: "0755"

- name: reload systemd
  command: systemctl daemon-reload
  when: ansible_service_mgr == "systemd" and restart_apimaster is defined and restart_apimaster == True

- name: reload kube-apiserver
  service:
    name: kube-apiserver
    state: restarted
    enabled: yes
  when: ( restart_apimaster is defined and restart_apimaster == True) or
        secret_changed | default(false)

- name: Enable apiserver
  service:
    name: kube-apiserver
    enabled: yes
    state: started
  when: restart_apimaster is not defined or restart_apimaster == False

- name: install | Write kube-apiserver systemd init file
  template:
    src: "kube-apiserver.service.j2"
    dest: "/etc/systemd/system/kube-apiserver.service"
    backup: yes
  when: ansible_service_mgr == "systemd"
  notify: restart kube-apiserver

- name: Write kube-apiserver config file
  template:
    src: "kube-apiserver.j2"
    dest: "{{ config_dir }}/kube-apiserver.env"
    backup: yes
  notify: restart kube-apiserver

- name: Allow apiserver to bind on both secure and insecure ports
  shell: setcap cap_net_bind_service+ep {{ bin_dir }}/kube-apiserver
  changed_when: false

- meta: flush_handlers

- include: start.yml
  with_items: "{{ groups['kube-master'] }}"
  when: "{{ hostvars[item].inventory_hostname == inventory_hostname }}"

- name: wait for the apiserver to be running
  wait_for:
    port: "{{ k8s.apiserver.insecure_port }}"
    timeout: 60
