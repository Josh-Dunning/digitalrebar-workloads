--- 
- debug: msg="Playbook source {{ playbook_source }} "

# debugging variables
- include: debug.yml
  when: debug

- include: ../shared/tasks/downloader.yml kube_component=kube-controller-manager

- name: install | Write kube-controller-manager initd script
  template: src=kube-controller-manager.initd.j2 dest=/etc/init.d/kube-controller owner=root mode=0755
  when: ansible_service_mgr in ["sysvinit","upstart"] and ansible_os_family == "Debian"
  notify: restart kube-controller

- name: install | Write kube-controller-manager conf script
  template: src=kube-controller-manager.conf.j2 dest=/etc/init/kube-controller.conf owner=root mode=0755
  when: ansible_service_mgr in ["sysvinit","upstart"] and ansible_os_family == "Debian"
  notify: restart kube-controller

- name: install | Write kube-controller-manager default file
  template: src=kube-controller-manager.defaults.j2 dest=/etc/default/kube-controller owner=root mode=0755
  when: ansible_service_mgr in ["sysvinit","upstart"] and ansible_os_family == "Debian"
  notify: restart kube-controller

- name: install | Write kube-controller systemd init file
  template:
    src: "kube-controller.service.j2"
    dest: "/etc/systemd/system/kube-controller.service"
    backup: yes
  when: ansible_service_mgr == "systemd"
  notify: 
    - reload kube-controller systemd
    - restart kube-controller

- meta: flush_handlers

- name: Enable controller
  service:
    name: kube-controller
    enabled: yes

#GREG: This is wrong, do this instead: sudo systemctl status kube-controller-manager --no-pager

- name: wait for the controller to be running
  wait_for:
    port: "{{ k8s.apiserver.insecure_port }}"
    timeout: 60

