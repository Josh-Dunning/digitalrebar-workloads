---

- name: Update package management cache (YUM)
  yum: update_cache=yes name='*'
  when: ansible_pkg_mgr == 'yum'

- name: Install packages requirements [SLOW]
  action:
    module: "{{ ansible_pkg_mgr }}"
    name: "libselinux-python"
    state: latest
  when: ansible_pkg_mgr == 'yum'

- name: "Flannel bin dir exists"
  file:
    path: "{{ flannel_bin_dir }}"
    state: directory
    recurse: yes

- name: "Download Flannel {{ flannel.version }} Executables [SLOW]"
  get_url:
    dest: "{{flannel_bin_dir}}/flanneld"
    checksum: "{{ item }}"
    url: "{{ flannel_source.url }}"
    validate_certs: yes
    mode: 0755
  with_items: "{{ vars['flannel_source']['checksum'][flannel.version]['flanneld'] }}"

- name: install | Write flannel initd script
  template: src=flannel.initd.j2 dest=/etc/init.d/flannel owner=root mode=0755
  when: ansible_service_mgr in ["sysvinit","upstart"] and ansible_os_family == "Debian"
  notify: delete default docker bridge

- name: install | Write flannel conf script
  template: src=flannel.conf.j2 dest=/etc/init/flannel.conf owner=root mode=0755
  when: ansible_service_mgr in ["sysvinit","upstart"] and ansible_os_family == "Debian"

- name: install | Write flannel default file
  template: src=flannel.defaults.j2 dest=/etc/default/flannel owner=root mode=0755
  when: ansible_service_mgr in ["sysvinit","upstart"] and ansible_os_family == "Debian"

- name: Create flannel service
  template:
    src: flannel-service.yml
    dest: /etc/systemd/system/flannel.service
  when: ansible_service_mgr in "systemd"
  notify: delete default docker bridge

- name: Start Flannel
  service:
    name: flannel
    state: restarted

- name: Enable flannel
  service:
    name: flannel
    enabled: yes

- name: Wait for flannel subnet.env file presence
  wait_for:
    path: /run/flannel/subnet.env
    delay: 5
    timeout: 600

- name: Get flannel_subnet from subnet.env
  shell: cat /run/flannel/subnet.env | awk -F'=' '$1 == "FLANNEL_SUBNET" {print $2}'
  register: flannel_subnet_output
  changed_when: false

- set_fact:
    flannel_subnet: "{{ flannel_subnet_output.stdout }}"

- name: Get flannel_mtu from subnet.env
  shell: cat /run/flannel/subnet.env | awk -F'=' '$1 == "FLANNEL_MTU" {print $2}'
  register: flannel_mtu_output
  changed_when: false

- set_fact:
    flannel_mtu: "{{ flannel_mtu_output.stdout }}"

- name: "Flannel docker config dir exists"
  file:
    path: "/etc/systemd/system/docker.service.d"
    state: directory
    recurse: yes

- name: Set docker daemon options
  template:
    src: docker
    dest: "/etc/systemd/system/docker.service.d/network_opts.conf"
    owner: root
    group: root
    mode: 0644
  notify:
    - restart docker
  when: ansible_service_mgr in "systemd"

- name: Set docker daemon options network
  template: src=docker-network.defaults.j2 dest=/etc/default/docker-network owner=root mode=0755
  when: ansible_service_mgr in ["sysvinit","upstart"] and ansible_os_family == "Debian"
  notify:
    - restart docker

