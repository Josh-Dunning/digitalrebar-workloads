--- 
- debug: msg="Playbook source {{ playbook_source }} "

- debug: msg="NOTE Staging Kubernetes Version {{k8s.version.stage}} for Upgrade from {{k8s.version}}"
  when:  not k8s.version == "{{k8s.version.stage | default(k8s.version)}}"

# debugging variables
- include: debug.yml
  when: debug

- include: ../shared/tasks/downloader.yml kube_component=kube-proxy kube_version={{k8s.version.stage | default(k8s.version)}}

- name: install | Write kube-proxy initd script
  template: src=kube-proxy.initd.j2 dest=/etc/init.d/kube-proxy owner=root mode=0755
  when: ansible_service_mgr in ["sysvinit","upstart"] and ansible_os_family == "Debian"
  notify: restart proxy

- name: install | Write kube-proxy conf script
  template: src=kube-proxy.conf.j2 dest=/etc/init/kube-proxy.conf owner=root mode=0755
  when: ansible_service_mgr in ["sysvinit","upstart"] and ansible_os_family == "Debian"
  notify: restart proxy

- name: install | Write kube-proxy default file
  template: src=kube-proxy.defaults.j2 dest=/etc/default/kube-proxy owner=root mode=0755
  when: ansible_service_mgr in ["sysvinit","upstart"] and ansible_os_family == "Debian"
  notify: restart proxy

- name: install | Write kube-proxy systemd init file
  template:
    src: kube-proxy.service.j2
    dest: /etc/systemd/system/kube-proxy.service
  when: ansible_service_mgr == "systemd"
  notify:
    - reload proxy systemd
    - restart proxy

# reload-systemd
- meta: flush_handlers

- name: Enable proxy
  service:
    name: kube-proxy
    enabled: yes

