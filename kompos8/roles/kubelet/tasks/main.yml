--- 
- debug: msg="Playbook source {{ playbook_source }} "

- debug: msg="NOTE Staging Kubernetes Version {{k8s.version.stage}} for Upgrade from {{k8s.version}}"
  when:  not k8s.version == "{{k8s.version.stage | default(k8s.version)}}"

# debugging variables
- include: debug.yml
  when: debug

- include: ../shared/tasks/downloader.yml kube_component=kubelet kube_version={{k8s.version.stage | default(k8s.version)}}

- name: Create kubelet directory
  file:
    path: /var/lib/kubelet
    state: directory

- name: Create cni directory
  file:
    path: /opt/cni
    state: directory

- name: Get CNI tarball
  get_url:
    dest: "/tmp/cni-c864f0e1ea73719b8f4582402b0847064f9883b0.tar.gz"
    url: "https://storage.googleapis.com/kubernetes-release/network-plugins/cni-c864f0e1ea73719b8f4582402b0847064f9883b0.tar.gz"
    validate_certs: yes

- name: Explode tarball
  shell: "tar -xvf /tmp/cni-c864f0e1ea73719b8f4582402b0847064f9883b0.tar.gz -C /opt/cni"

- name: install | Write kubeconfig
  template:
    src: "kubeconfig.j2"
    dest: "/var/lib/kubelet/kubeconfig"
  notify: restart kubelet

- name: install | Write kubelet initd script
  template: src=kubelet.initd.j2 dest=/etc/init.d/kubelet owner=root mode=0755
  when: ansible_service_mgr in ["sysvinit","upstart"] and ansible_os_family == "Debian"
  notify: restart kubelet

- name: install | Write kubelet conf script
  template: src=kubelet.conf.j2 dest=/etc/init/kubelet.conf owner=root mode=0755
  when: ansible_service_mgr in ["sysvinit","upstart"] and ansible_os_family == "Debian"
  notify: restart kubelet

- name: install | Write kubelet default file
  template: src=kubelet.defaults.j2 dest=/etc/default/kubelet owner=root mode=0755
  when: ansible_service_mgr in ["sysvinit","upstart"] and ansible_os_family == "Debian"
  notify: restart kubelet

- name: install | Write kubelet systemd init file
  template:
    src: kubelet.service.j2
    dest: /etc/systemd/system/kubelet.service
  when: ansible_service_mgr == "systemd"
  notify:
    - reload kubelet systemd
    - restart kubelet

# reload-systemd
- meta: flush_handlers

- name: Enable kubelet
  service:
    name: kubelet
    enabled: yes
