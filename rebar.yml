barclamp:
  name: kompos8
  display: Kubernetes Composed
  license: APLv2
  copyright: "RackN, 2016"
  os_support:
    # system D only!
    - ubuntu-15.04
    - ubuntu-16.04
    - centos-7.2.1511
    - redhat-7.1

wizard:
  version: 2
  name: "Kompos8 K8s"
  description: "Install Kubernetes Cluster"
  icon: "group_work"
  system_nodes: false
  create_nodes: true
  os: true
  services:
    k8s-master: odd
    k8s-node: all
  create_size:
    default: "16 GB"
    AwsProvider: "m4.large"
    GoogleProvider: "n1-standard-16"
  deployment_size:
    k8ubernetes-master: 1
    k8ubernetes-node: 3

metadata:
  playbook_scope: node
  playbook_src_paths:
    k8: https://github.com/digitalrebar/kompos8.git
  playbook_path: k8

roles:
  - name: k8s-master
    description: 'Kubernetes Master'
    icon: "grid_on"
    type: "BarclampCluster::ServiceRole"
    jig: noop
    flags:
      - milestone
    events:
      - endpoint: inproc://role:k8s-master/on_active
        selectors:
          - event: on_active
            obj_class: role
            obj_id: k8s-master
          - event: synch_on_delete
            obj_class: role
            obj_id: k8s-master
    requires:
      - k8s-apiserver
      - k8s-scheduler
      - k8s-controller
    attribs:
      - name: k8s-master-network
        description: "The network of the Master nodes"
        map: 'k8s/master/network'
        default: 'node-control-address'
      - name: k8s-master-addresses
        description: "The addresses of the Master nodes"
        map: 'k8s/master/addresses'
        default: []
        schema:
          type: seq
          required: false
          sequence:
            - type: str
              pattern: /\[?[0-9a-f:.]*\]?:?[0-9]*/
      - name: k8s-master-hostnames
        description: "All hostnames of the Master nodes"
        map: 'k8s/master/hostnames'
        default: []
        schema:
          type: seq
          required: false
          sequence:
            - type: str

  - name: k8s-node
    description: 'Kubernetes Node'
    jig: noop
    icon: "center_focus_strong"
    flags:
      - milestone
    requires:
      - k8s-kubelet
      - k8s-proxy
      # - docker

  - name: etcd-node
    description: "etcd clustered from retr0h"
    jig: ansible-playbook
    icon: "local_grocery_store"
    requires:
      - rebar-installed-node
    flags:
      - implicit
    metadata:
      playbook_src_paths:
        etcd: "galaxy:retr0h.etcd"
      playbook_path: "."
      playbook_file: "."
      role_role_map:
        etcd-node:
          - retr0h.etcd

  - name: etcd
    description: "etcd cluster service"
    jig: noop
    type: "BarclampCluster::ServiceRole"
    icon: "store"
    requires:
      - etcd-node
    flags:
      - milestone
    events:
      - endpoint: inproc://role:etcd/on_active
        selectors:
          - event: on_active
            obj_class: role
            obj_id: etcd
          - event: synch_on_delete
            obj_class: role
            obj_id: etcd
    attribs:
      - name: etcd-network
        description: "The network of the etcd nodes"
        map: 'etcd/network'
        default: 'node-control-address'
      - name: etcd-addresses
        description: "The addresses of the etcd nodes"
        map: 'etcd/addresses'
        default: []
        schema:
          type: seq
          required: false
          sequence:
            - type: str
              pattern: /\[?[0-9a-f:.]*\]?:?[0-9]*/

  - name: k8s-prereqs
    description: 'Kubernetes Setup'
    jig: ansible-playbook
    icon: "crop_free"
    flags:
      - implicit
    requires:
      #- docker-prep
      - k8s-certs
      - cluster
    metadata:
      playbook_file: prereqs.yml
      playbook_combined_repo: true
    attribs:
      - name: k8s-log_level
        description: "The kubernetes logging level"
        map: 'k8s\log\level'
        default: 2
        schema:
          type: int
          required: true

# node roles (requires master) 

  - name: k8s-proxy
    description: 'Kubernetes Node Proxy'
    jig: ansible-playbook
    icon: "call_missed_outgoing"
    flags:
      - implicit
    requires:
      - k8s-prereqs
      - k8s-apiserver
    wants-attribs:
      - k8s-master-addresses
      - provider-type
      - k8s-cluster-name
    metadata:
      playbook_file: proxy.yml
      playbook_combined_repo: true

  - name: k8s-kubelet
    description: 'Kubernetes Kubelet'
    jig: ansible-playbook
    icon: "center_focus_weak"
    flags:
      - implicit
    requires:
      - k8s-prereqs
      - k8s-apiserver
    wants-attribs:
      - k8s-master-addresses
      - k8s-apiserver_port
      - provider-type
      - k8s-cluster-name
    metadata:
      playbook_file: kubelet.yml
      playbook_combined_repo: true


# master roles

  - name: k8s-certs
    description: "Kubernetes Security Certifcates"
    jig: ansible-playbook
    icon: account_balance
    flags:
      - implicit
      - destructive
    metadata:
      playbook_file: certs.yml
      playbook_combined_repo: true
    attribs:
      - name: k8s-cluster-name
        description: "The name of the Kubernetes cluster"
        map: 'k8s/cluster/name'
        default: 'cluster.local'
        schema:
          type: str
          required: true

  - name: k8s-apiserver
    description: 'Kubernetes API Server'
    jig: ansible-playbook
    icon: "photo_filter"
    flags:
      - cluster
      - implicit
    requires:
      #- etcd
    metadata:
      playbook_file: apiserver.yml
      playbook_combined_repo: true
    attribs:
      - name: k8s-users
        description: "The default set of users for kubernetes API"
        map: 'k8s\user\name'
        default:
          kube:
            pass: changeme
            role: admin
        schema:
          type: map
          mapping:
            =:
              type: map
              mapping:
                =:
                  type: str
          required: true
      - name: k8s-apiserver_port
        description: "The secure port for the API server"
        map: 'k8s\apiserver\port'
        default: 443
        schema:
          type: int
          required: true
      - name: k8s-apiserver_insecure_port
        description: "The insecure port for the API server"
        map: 'k8s\apiserver\insecure_port'
        default: 8080
        schema:
          type: int
          required: true

  - name: k8s-controller
    description: 'Kubernetes Controller'
    jig: ansible-playbook
    icon: "event_seat"
    flags:
      - implicit
    requires:
      - k8s-apiserver
    metadata:
      playbook_file: controller.yml
      playbook_combined_repo: true

  - name: k8s-scheduler
    description: 'Kubernetes Scheduler'
    jig: ansible-playbook
    icon: "portrait"
    flags:
      - implicit
    requires:
      - k8s-apiserver
    metadata:
      playbook_file: scheduler.yml
      playbook_combined_repo: true

# networking providers

  - name: k8s-calico
    description: 'Kubernetes Calico SDN'
    jig: ansible-playbook
    icon: "pets"
    flags:
      - implicit
    requires:
      - k8s-prereqs
    proceeds:
      - k8s-kubelet
    metadata:
      playbook_file: calico.yml
      playbook_combined_repo: true

# client roles

  - name: k8s-kubectl
    description: 'Kubernetes Control (kubectl) Server'
    jig: ansible-playbook
    icon: "traffic"
    flags:
      - implicit
    requires:
      - k8s-prereqs
      - k8s-master
    metadata:
      playbook_file: kubectl.yml
      playbook_combined_repo: true
